head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2002.01.23.15.01.34;	author tjaden;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.22.04.05.10;	author tjaden;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.20.06.58.54;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.17.13.31.23;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.13.22;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Delay respawning of crates if they would collide with another object.
@
text
@-- basic-tilelike.lua

store_load ("basic/basic-tilelike.dat", "/basic/tilelike/")

objtype_register ("objtile", "basic-barrel-red", "/basic/tilelike/barrel-red/main")
objtype_register ("objtile", "basic-barrel-grey", "/basic/tilelike/barrel-gray/main")



----------------------------------------------------------------------
--  Crates
----------------------------------------------------------------------

local make_crate_nonproxy_init = function (health, respawn_secs)
    return function (self)
	self.health = health
	function self:receive_damage (amount)
	    self.health = self.health - amount
	    if self.health <= 0 then
		self:hide ()
		function the_hook (self)
		    if _internal_would_collide_with_objects (self) then
			-- try again later
			self:set_update_hook (700, the_hook)
		    else
			self:show ()
			self:remove_update_hook ()
		    end
		end
		self:set_update_hook (respawn_secs * 1000, the_hook)
	    end
	end
    end
end

Objtype {
    category = "objtile",
    name = "basic-crate-000",
    icon = "/basic/tilelike/crate-normal000",
    nonproxy_init = make_crate_nonproxy_init (15, 20)
}

Objtype {
    category = "objtile",
    name = "basic-crate-001",
    icon = "/basic/tilelike/crate-normal001",
    nonproxy_init = make_crate_nonproxy_init (15, 20)
}

Objtype {
    category = "objtile",
    name = "basic-crate-large-000",
    icon = "/basic/tilelike/crate-large000",
    nonproxy_init = make_crate_nonproxy_init (30, 20)
}


----------------------------------------------------------------------
--  Ladders
----------------------------------------------------------------------

local Ladder = function (t)
    return Objtype (t, {
	category = "basic-ladder",
	nonproxy_init = function (self)
	    object_set_collision_is_ladder (self)
	    self:set_mask (mask_main, t.mask, t.cx, t.cy)
	end
    })
end

Ladder {
    name = "basic-ladder-gray1",
    icon = "/basic/tilelike/ladder-gray1",
    mask = "/basic/tilelike/ladder-gray1-mask",
    cx = 8, cy = 8
}

Ladder {
    name = "basic-ladder-gray3",
    icon = "/basic/tilelike/ladder-gray3",
    mask = "/basic/tilelike/ladder-gray3-mask",
    cx = 8, cy = 24
}

Ladder {
    name = "basic-ladder-gray5",
    icon = "/basic/tilelike/ladder-gray5",
    mask = "/basic/tilelike/ladder-gray5-mask",
    cx = 8, cy = 40
}
@


1.4
log
@Updated for changes to datafiles.
@
text
@d14 1
a14 2
local make_crate_nonproxy_init
function make_crate_nonproxy_init (health, respawn_secs)
d20 11
a30 1
		self:hide_and_respawn_later (respawn_secs * 1000)
@


1.3
log
@Some initial code to make crates destructible.
@
text
@d5 2
a6 2
objtype_register ("objtile", "basic-barrel-red", "/basic/tilelike/barrel000")
objtype_register ("objtile", "basic-barrel-grey", "/basic/tilelike/barrel001")
d53 29
a81 7
Objtype {
    category = "basic-ladder",
    name = "basic-ladder-main",
    icon = "/basic/tilelike/ladder/000",
    nonproxy_init = function (self)
	object_set_collision_is_ladder (self)
    end
@


1.2
log
@Added support for ladders.
@
text
@d7 40
a46 3
objtype_register ("objtile", "basic-crate-000", "/basic/tilelike/crate-normal000")
objtype_register ("objtile", "basic-crate-001", "/basic/tilelike/crate-normal001")
objtype_register ("objtile", "basic-crate-large-000", "/basic/tilelike/crate-large000")
@


1.1
log
@Initial revision
@
text
@d10 14
@
