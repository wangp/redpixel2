head	1.15;
access;
symbols;
locks; strict;
comment	@# @;


1.15
date	2002.07.15.08.45.18;	author tjaden;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.15.05.54.19;	author tjaden;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.14.01.32.25;	author tjaden;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.13.03.52.31;	author tjaden;	state Exp;
branches;
next	1.11;

1.11
date	2002.07.12.17.46.20;	author tjaden;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.11.15.25.39;	author tjaden;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.11.15.20.24;	author tjaden;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.22.15.45.45;	author tjaden;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.22.11.59.30;	author tjaden;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.21.17.36.03;	author tjaden;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.21.17.08.15;	author tjaden;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.20.06.58.23;	author tjaden;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.15.10.17.13;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.14.16.11.29;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.13.22;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Fixed bloodlust image placement.
@
text
@-- basic-powerup.lua

store_load ("basic/basic-powerup.dat", "/basic/powerup/")


local Item = Respawning_Item


----------------------------------------------------------------------
-- Enhancements
----------------------------------------------------------------------

local Armour_Item = function (t)
    return Item (t, {
	collide_hook = function (self, player)
	    return player:receive_armour (t.give_armour)
	end
    })
end

Armour_Item {
    name = "basic-armour-brown", 
    icon = "/basic/powerup/armour/brown",
    respawn_secs = 10,
    give_armour = 10
}

Armour_Item {
    name = "basic-armour-purple", 
    icon = "/basic/powerup/armour/purple",
    respawn_secs = 10,
    give_armour = 20
}

Armour_Item {
    name = "basic-armour-blue", 
    icon = "/basic/powerup/armour/blue",
    respawn_secs = 10,
    give_armour = 30
}

local bloodlust_anim = {
    "/basic/powerup/bloodlust/000",
    "/basic/powerup/bloodlust/001",
    "/basic/powerup/bloodlust/002",
    "/basic/powerup/bloodlust/003",
    "/basic/powerup/bloodlust/004",
    "/basic/powerup/bloodlust/005",
    "/basic/powerup/bloodlust/006",
    "/basic/powerup/bloodlust/007"
}

Item {
    name = "basic-bloodlust", 
    icon = "/basic/powerup/bloodlust/000",
    respawn_secs = 60,
    collide_hook = function (self, player)
	player:get_bloodlust_hook ()
    end,
    proxy_init = function (self)
	self.frame = 1
	self:set_update_hook (
	    150 + random (50),
	    function (self)
		self.frame = self.frame + 1
		if self.frame > getn (bloodlust_anim) then
		    self.frame = 1
		end
		self:replace_layer (0, bloodlust_anim[self.frame], 7, 8)
	    end
	)
    end
}

Item {
    name = "basic-cordial", 
    icon = "/basic/powerup/cordial",
    respawn_secs = 10
}

local lightamp_anim = {
    "/basic/powerup/lightamp/000",
    "/basic/powerup/lightamp/000",
    "/basic/powerup/lightamp/001",
    "/basic/powerup/lightamp/002",
    "/basic/powerup/lightamp/003",
    "/basic/powerup/lightamp/002",
    "/basic/powerup/lightamp/001"
}

Item {
    name = "basic-lightamp", 
    icon = "/basic/powerup/lightamp/000", 
    respawn_secs = 10,
    collide_hook = function (self, player)
	call_method_on_clients (player, "get_lightamp_hook")
    end,
    proxy_init = function (self)
	self:add_light ("/basic/light/blue-16", 0, 0)

	self.frame = 1
	self:set_update_hook (
	    250 + random (50),
	    function (self)
		self.frame = self.frame + 1
		if self.frame > getn (lightamp_anim) then
		    self.frame = 1
		end
		self:replace_layer (0, lightamp_anim[self.frame], 7, 3)
	    end
	)
    end
}


----------------------------------------------------------------------
--  Health restoration
----------------------------------------------------------------------

local Health_Item = function (t)
    return Item (t, {
	collide_hook = function (self, player)
	    return player:receive_health (t.give_health)
	end
    })
end

Health_Item {
    name = "basic-burger",
    icon = "/basic/powerup/burger",
    respawn_secs = 10,
    give_health = 10
}

Health_Item {
    name = "basic-chocolate", 
    icon = "/basic/powerup/chocolate",
    respawn_secs = 10,
    give_health = 5
}

Health_Item {
    name = "basic-joltcola", 
    icon = "/basic/powerup/joltcola",
    respawn_secs = 10,
    give_health = 20
}

Health_Item {
    name = "basic-medikit", 
    icon = "/basic/powerup/medikit",
    respawn_secs = 10,
    give_health = 50
}

Health_Item {
    name = "basic-pizza", 
    icon = "/basic/powerup/pizza",
    respawn_secs = 10,
    give_health = 30
}
@


1.14
log
@Added bloodlust/damage_factor support.  Introduced multiple hook
system and cleaned up code.  Also changed blaster and AK damages.
@
text
@d69 1
a69 1
		self:replace_layer (0, bloodlust_anim[self.frame], 7, 3)
@


1.13
log
@Initial armour support.
@
text
@d42 11
d56 17
a72 1
    respawn_secs = 10
@


1.12
log
@*** empty log message ***
@
text
@d13 7
d21 1
a21 1
Item {
d24 2
a25 1
    respawn_secs = 10
d28 1
a28 1
Item {
d31 2
a32 1
    respawn_secs = 10
d35 1
a35 1
Item {
d38 2
a39 1
    respawn_secs = 10
d96 1
a96 5
	    local h = player.health
	    player:receive_health (t.give_health)
	    if player.health == h then
		return false
	    end
@


1.11
log
@Made lightamps animate.
@
text
@d59 1
a59 2
	call_method_on_clients (player, "start_alt_light",
	    "return '/basic/powerup/lightamp/light', 3000, 20")
@


1.10
log
@Return false instead of non-nil from collide hooks to indicate that a
collision did not occur (more intuitive).
@
text
@d44 10
d64 12
@


1.9
log
@Made health items not disappear unless used.
@
text
@d67 3
a69 1
	    return player.health == h
@


1.8
log
@Added respawning ball to respawing items and made a wrapper around
Objtype for respawning items.
@
text
@d65 1
d67 1
@


1.7
log
@Made lightamp powerup give player a big blue light.
@
text
@d5 2
a6 15
local Item = function (t, u)
    t = merge (t, u)
    return Objtype (t, {
	category = "item",
	nonproxy_init = function (self)
	    self:set_collision_flags ("p")
	    function self:collide_hook (player)
		self:hide_and_respawn_later (1000 * t.respawn_secs)
		if t.action then
		    t.action (self, player)
		end
	    end
	end 
    })
end
d48 1
a48 1
    action = function (self, player)
d64 1
a64 1
	action = function (self, player)
@


1.6
log
@Made health items give health.
@
text
@d21 6
a26 1
-- enhancements
d61 4
@


1.5
log
@Allow a second argument to Objtype and Weapon, which should contain a
table of fields to add into or override in the first argument.
@
text
@d5 2
a6 1
local Item = function (t)
d13 3
d61 14
a74 2
-- health restoration
Item {
d77 2
a78 1
    respawn_secs = 10
d81 1
a81 1
Item {
d84 2
a85 1
    respawn_secs = 10
d88 1
a88 1
Item {
d91 2
a92 1
    respawn_secs = 10
d95 1
a95 1
Item {
d98 2
a99 1
    respawn_secs = 10
d102 1
a102 1
Item {
d105 2
a106 1
    respawn_secs = 10
@


1.4
log
@Added hide_and_respawn_later() method which is used a lot by objects.
@
text
@d5 10
a14 7
local make_basic_powerup_init = function (respawn_secs)
    return function (self)
	self:set_collision_flags ("p")
	function self:collide_hook (player)
	    self:hide_and_respawn_later (1000 * respawn_secs)
	end
    end
d18 1
a18 2
Objtype {
    category = "item", 
d21 1
a21 1
    nonproxy_init = make_basic_powerup_init (10)
d24 1
a24 2
Objtype {
    category = "item", 
d27 1
a27 1
    nonproxy_init = make_basic_powerup_init (10)
d30 1
a30 2
Objtype {
    category = "item", 
d33 1
a33 1
    nonproxy_init = make_basic_powerup_init (10)
d36 1
a36 2
Objtype {
    category = "item", 
d39 1
a39 1
    nonproxy_init = make_basic_powerup_init (10)
d42 1
a42 2
Objtype {
    category = "item", 
d45 1
a45 1
    nonproxy_init = make_basic_powerup_init (10)
d48 1
a48 2
Objtype {
    category = "item",
d51 1
a51 1
    nonproxy_init = make_basic_powerup_init (10),
d58 1
a58 2
Objtype {
    category = "item",
d61 1
a61 1
    nonproxy_init = make_basic_powerup_init (10)
d64 1
a64 2
Objtype {
    category = "item", 
d67 1
a67 1
    nonproxy_init = make_basic_powerup_init (10)
d70 1
a70 2
Objtype {
    category = "item", 
d73 1
a73 1
    nonproxy_init = make_basic_powerup_init (10)
d76 1
a76 2
Objtype {
    category = "item", 
d79 1
a79 1
    nonproxy_init = make_basic_powerup_init (10)
d82 1
a82 2
Objtype {
    category = "item", 
d85 1
a85 1
    nonproxy_init = make_basic_powerup_init (10)
@


1.3
log
@Updated to Lua 4.1-work3.
@
text
@d9 1
a9 8
	    self:hide ()
	    self:set_update_hook (
		1000 * respawn_secs,
		function (self)
		    self:show ()
		    self:remove_update_hook ()
		end
	    )
@


1.2
log
@Used object hidden attribute to implement respawning powerups.
@
text
@d5 1
a5 1
function make_basic_powerup_init (respawn_secs)
a6 1
	local respawn_secs = %respawn_secs
d8 1
a8 1
	function self.collide_hook (self, player)
d11 1
a11 1
		1000 * %respawn_secs,
@


1.1
log
@Initial revision
@
text
@d5 14
a18 4
function basic_powerup_init (self)
    self:set_collision_flags ("p")
    function self.collide_hook (self, player)
	self:destroy (self)
d27 1
a27 1
    nonproxy_init = basic_powerup_init
d34 1
a34 1
    nonproxy_init = basic_powerup_init
d41 1
a41 1
    nonproxy_init = basic_powerup_init
d48 1
a48 1
    nonproxy_init = basic_powerup_init
d55 1
a55 1
    nonproxy_init = basic_powerup_init
d62 1
a62 1
    nonproxy_init = basic_powerup_init,
d73 1
a73 1
    nonproxy_init = basic_powerup_init
d80 1
a80 1
    nonproxy_init = basic_powerup_init
d87 1
a87 1
    nonproxy_init = basic_powerup_init
d94 1
a94 1
    nonproxy_init = basic_powerup_init
d101 1
a101 1
    nonproxy_init = basic_powerup_init
@
