head	1.14;
access;
symbols;
locks; strict;
comment	@# @;


1.14
date	2002.02.05.04.09.11;	author tjaden;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.01.15.04.16;	author tjaden;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.01.14.51.51;	author tjaden;	state Exp;
branches;
next	1.11;

1.11
date	2002.01.31.12.21.36;	author tjaden;	state Exp;
branches;
next	1.10;

1.10
date	2002.01.29.14.53.02;	author tjaden;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.27.14.05.26;	author tjaden;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.26.11.54.32;	author tjaden;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.24.07.19.44;	author tjaden;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.23.03.53.39;	author tjaden;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.18.14.31.24;	author tjaden;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.15.13.24.22;	author tjaden;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.15.10.16.08;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.14.08.36.11;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.14.00;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Added sound panning/volume based on position of the source relative to
the player (although it doesn't update when the player moves yet).
@
text
@##
## Makefile for Red Pixel II
##

ifdef MINGDIR
	include config.mingw
else
	include config.linux
endif

SRCDIRS := src src/store src/magic src/fastsqrt src/jpgalleg \
	   src/loadaud src/gui src/ug src/editor src/server

CC := gcc
CFLAGS := $(PLAT_TARGET) $(PLAT_CFLAGS) -Wall -D_REENTRANT \
	  -I libnet/include -I lua-4.1-work3/include \
	  $(addprefix -I,$(SRCDIRS)) -g -Wstrict-prototypes
LDLIBS := $(PLAT_LIBS)
LDFLAGS := $(PLAT_LDFLAGS)

ifndef PROFILE
CFLAGS += -O2 -fomit-frame-pointer -funroll-loops
else
CFLAGS += -O2 -funroll-loops -march=pentium -pg
LDFLAGS := -pg
endif

PROGRAM := program$(PLAT_EXE)
OBJDIR := $(PLAT_OBJDIR)

#----------------------------------------------------------------------

MODULES_STORE :=				\
	hash					\
	store

MODULES_MAGIC :=				\
	magic4x4				\
	magichf					\
	magicrot

MODULES_FASTSQRT :=				\
	fastsqrt

MODULES_JPGALLEG :=				\
	jpeg

MODULES_LOADAUD :=				\
	loadaud

MODULES_GUI :=					\
	gui					\
	guiaccel				\
	guidirty				\
	guimouse				\
	guiwm					\
	guiwmdef

MODULES_UG :=					\
	ug					\
	ugblank					\
	ugbutton				\
	ugdialog				\
	ugevent					\
	uglayout				\
	ugmenu					\
	ugscroll				\
	ugtheme					\
	ugthmmot				\
	ugthmpaw				\
	ugwidget

MODULES_EDITOR :=				\
	cursor					\
	editarea				\
	editor					\
	edselect				\
	menu					\
	mdlights				\
	mdobject				\
	mdtiles					\
	mdstarts				\
	modemgr					\
	selbar

MODULES_SERVER :=				\
	clsvface				\
	server					\
	svclient				\
	svgame					\
	svlobby					\
	svstats					\
	svticker				\
	textface				\

MODULES_GAME :=					\
	alloc					\
	bindings				\
	bitmask					\
	bitmaskg				\
	bitmaskr				\
	blast					\
	blod					\
	camera					\
	client					\
	error					\
	explo					\
	extdata					\
	fps					\
	gameinit				\
	getoptc					\
	loaddata				\
	main					\
	map					\
	mapfile					\
	messages				\
	mylibnet				\
	mylua					\
	object					\
	objtypes				\
	packet					\
	particle				\
	path					\
	render					\
	sound					\
	sync					\
	timeout					\
	timeval					\
	yield

MODULES := 					\
	$(MODULES_STORE) 			\
	$(MODULES_MAGIC)			\
	$(MODULES_FASTSQRT)			\
	$(MODULES_JPGALLEG)			\
	$(MODULES_LOADAUD)			\
	$(MODULES_GUI)				\
	$(MODULES_UG)				\
	$(MODULES_EDITOR)			\
	$(MODULES_SERVER)			\
	$(MODULES_GAME)

OBJS := $(addprefix $(OBJDIR)/,$(addsuffix .o,$(MODULES)))

#----------------------------------------------------------------------

all: $(PROGRAM)

vpath %.c $(SRCDIRS)

$(OBJDIR)/%.o: %.c
	$(CC) $(CFLAGS) -o $@@ -c $<

src/bindings.inc: src/bindgen.lua
	$(PLAT_LUABIN) $< > $@@

src/objectet.inc: src/objgen.lua
	$(PLAT_LUABIN) $< > $@@

$(PROGRAM): $(OBJS) $(PLAT_LIBNET) $(PLAT_LIBLUA)
	$(CC) $(LDFLAGS) -o $@@ $(OBJS) $(LDLIBS)

#----------------------------------------------------------------------

ifeq "$(PLATFORM)" "LINUX"

$(PLAT_LIBNET):
	cp libnet/makfiles/linux.mak libnet/port.mak
	$(MAKE) -C libnet lib

$(PLAT_LIBLUA):
	$(MAKE) -C lua-4.1-work3

endif

ifeq "$(PLATFORM)" "MINGW"

$(PLAT_LIBNET):
	copy libnet\makfiles\mingw.mak libnet\port.mak
	$(MAKE) -C libnet lib

$(PLAT_LIBLUA):
	$(MAKE) -C lua-4.1-work3/src
	$(MAKE) -C lua-4.1-work3/src/lib
	$(MAKE) -C lua-4.1-work3/src/lua
endif

#----------------------------------------------------------------------

SOURCES := $(addsuffix /*.c,$(SRCDIRS))

TAGS: $(SOURCES)
	etags $^

tags: $(SOURCES)
	ctags $^

#----------------------------------------------------------------------

doc/gui_api.html: src/gui/gui.h
	$(PLAT_LUABIN) -f tools/mtfm.lua $< > $@@

doc/ug_api.html: src/ug/ug.h
	$(PLAT_LUABIN) -f tools/mtfm.lua $< > $@@

mtfmdocs: doc/gui_api.html doc/ug_api.html

#----------------------------------------------------------------------

depend:
	gcc $(CFLAGS) -MM $(SOURCES) | sed 's,^\(.*[.]o:\),$$(OBJDIR)/\1,' > makefile.dep

-include makefile.dep

#----------------------------------------------------------------------

clean: 
	rm -f $(OBJS) core

cleaner: clean
	rm -f $(PROGRAM) 
	rm -f TAGS tags
	rm -f depend

#----------------------------------------------------------------------

EXCLUDE_LIST := *.o $(PROGRAM) TAGS tags depend
EXCLUDE := $(addprefix --exclude , $(EXCLUDE_LIST))

backup:
	cd ../ && tar zcvf redstone-`date +%Y%m%d`.tar.gz redstone $(EXCLUDE)

suidroot:
	chown root.games $(PROGRAM)
	chmod 4750 $(PROGRAM)

prepare-dist: cleaner
	$(MAKE) depend
	$(MAKE) -C libnet cleaner
	rm libnet/port.mak
	$(MAKE) -C lua-4.1-work3 clean

.PHONY: clean cleaner backup suidroot prepare-dist


##
## End of Makefile
##
@


1.13
log
@Minor: put prefix before date in backup archive file names.
@
text
@d125 1
@


1.12
log
@Updated mingw port.
@
text
@d230 1
a230 1
	cd ../ && tar zcvf `date +%Y%m%d`.tar.gz redstone $(EXCLUDE)
@


1.11
log
@Changes for client-server mode.
@
text
@d5 5
a9 1
include config.linux
d170 3
d175 5
a179 1
## other OSes here
d182 4
a185 1
	$(MAKE) -C lua-4.1-work3
d236 5
d242 1
a242 1
.PHONY: clean cleaner backup suidroot lua
@


1.10
log
@Added loadaud support.
@
text
@d83 1
d89 2
a90 1
	svticker
a121 1
	textface				\
@


1.9
log
@Added blasts.
@
text
@d8 1
a8 1
	   src/gui src/ug src/editor src/server
d44 3
d130 1
@


1.8
log
@Added support for explosion graphics.
@
text
@d93 1
@


1.7
log
@Changes following cleanup of server and client sources.
@
text
@d18 1
a18 2
CFLAGS += -O2
# -fomit-frame-pointer -funroll-loops
d97 1
@


1.6
log
@Added spark particles.
@
text
@d8 1
a8 1
	   src/gui src/ug src/editor
d13 1
a13 1
	  $(addprefix -I,$(SRCDIRS)) -g
d18 2
a19 1
CFLAGS += -O2 -fomit-frame-pointer -funroll-loops
d80 8
d96 1
a100 2
	gameclt					\
	gamesrv					\
d107 1
d129 1
@


1.5
log
@Added blods.
@
text
@a85 1
	blood					\
d103 1
@


1.4
log
@Changes I forgot previously for the Makefile.
@
text
@d85 1
@


1.3
log
@Change main makefile a bit (Lua source now included in our tree).
@
text
@d133 1
a133 1
	$(LUA) $< > $@@
d136 1
a136 1
	$(LUA) $< > $@@
d169 1
a169 1
	$(LUA) -f tools/mtfm.lua $< > $@@
d172 1
a172 1
	$(LUA) -f tools/mtfm.lua $< > $@@
@


1.2
log
@Small changes to Makefile
@
text
@d12 2
a13 1
	  -I libnet/include $(addprefix -I,$(SRCDIRS)) -g
d133 1
a133 1
	lua $< > $@@
d135 2
a136 2
src/objecttm.inc: src/objgen.lua
	lua $< > $@@
d138 17
a154 2
$(PROGRAM): $(OBJS)
	$(CC) $(LDFLAGS) -o $@@ $^ $(LDLIBS)
d169 1
a169 1
	lua -f tools/mtfm.lua $< > $@@
d172 1
a172 1
	lua -f tools/mtfm.lua $< > $@@
d206 1
a206 1
.PHONY: clean cleaner backup suidroot
@


1.1
log
@Initial revision
@
text
@d11 2
a12 6
CFLAGS := $(PLAT_TARGET) $(PLAT_CFLAGS) -Wall -D_REENTRANT
CFLAGS += -I libnet/include
CFLAGS += $(addprefix -I,$(SRCDIRS)) -g
CFLAGS += -O2 -fomit-frame-pointer -funroll-loops -march=pentium
# CFLAGS += -pg
# LDFLAGS := -pg
d15 7
@
