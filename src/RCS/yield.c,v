head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2002.02.01.14.54.33;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.24.07.23.01;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.16.35;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Updated mingw port.
@
text
@/* yield.c - yield a timeslice
 *
 * Peter Wang <tjaden@@users.sourceforge.net>
 */


#include <sys/time.h>
#include <allegro.h>
#include "yield.h"


void yield (void)
{
#ifdef ALLEGRO_UNIX

    /* Under Unix we use select() instead of the sched_yield() that
     * Allegro uses for a stronger effect.  */
    
    struct timeval tv;
    tv.tv_sec = 0;
    tv.tv_usec = 1;
    select(0, 0, 0, 0, &tv);

#else
#ifdef ALLEGRO_WINDOWS
    
    /* This seems to give better results under Windows that Sleep(0)
     * (which is what yield_timeslice() uses).  */

    void __stdcall Sleep (int);
    Sleep (5);

#else

    yield_timeslice ();

#endif
#endif
}
@


1.2
log
@Changed all "()" declarations to "(void)".
@
text
@d25 1
d27 8
d37 1
@


1.1
log
@Initial revision
@
text
@a0 2
/* XXX: Replace this with Allegro once it is fixed up.  */

d12 1
a12 1
void yield ()
d15 3
@
