head	1.10;
access;
symbols;
locks; strict;
comment	@ * @;


1.10
date	2002.01.23.14.09.19;	author tjaden;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.23.03.54.00;	author tjaden;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.22.01.48.52;	author tjaden;	state Exp;
branches;
next	1.7;

1.7
date	2002.01.21.00.20.57;	author tjaden;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.19.12.36.18;	author tjaden;	state Exp;
branches;
next	1.5;

1.5
date	2002.01.19.08.21.42;	author tjaden;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.18.14.30.38;	author tjaden;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.15.13.28.42;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.13.09.28.02;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.16.35;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Added particles for respawning ball.
@
text
@#ifndef __included_gamesrv_h
#define __included_gamesrv_h


struct object;


typedef struct {
    void(*init) ();
    void (*shutdown) ();
    void (*add_log) (const char *prefix, const char *text);
    void (*set_status) (const char *text);
    const char *(*poll) ();
} game_server_interface_t;


int game_server_init (game_server_interface_t *, int net_driver);
void game_server_enable_single_hack ();
void game_server_run ();
void game_server_shutdown ();


struct object *game_server_spawn_object (const char *typename, float x, float y);
struct object *game_server_spawn_projectile (const char *typename, struct object *, float speed, float delta_angle);
void game_server_spawn_blood (float x, float y, long nparticles, float spread);
void game_server_spawn_sparks (float x, float y, long nparticles, float spread);
void game_server_spawn_respawn_particles (float x, float y, long nparticles, float spread);
void game_server_spawn_blod (float x, float y, long nparticles);
void game_server_call_method_on_clients (struct object *, const char *method, const char *arg);


#endif
@


1.9
log
@Added spark particles.
@
text
@d27 1
@


1.8
log
@Added set_status() method to game_server_interface.
@
text
@d26 1
@


1.7
log
@Added mechanism for server scripts to tell clients to execute object
methods (i.e. remote calls).
@
text
@d12 1
@


1.6
log
@Made spawn_object, spawn_projectile return the objects they create.
@
text
@d24 3
a26 2
int game_server_spawn_blood (float x, float y, long nparticles, float spread);
int game_server_spawn_blod (float x, float y, long nparticles);
@


1.5
log
@Added a delta_angle parameter to game_server_spawn_projectile().
@
text
@d22 2
a23 2
int game_server_spawn_object (const char *typename, float x, float y);
int game_server_spawn_projectile (const char *typename, struct object *, float speed, float delta_angle);
@


1.4
log
@Added blods.
@
text
@d23 1
a23 1
int game_server_spawn_projectile (const char *typename, struct object *, float speed);
@


1.3
log
@Made the spread parameter to spawn blood a float (instead of int).
@
text
@d25 1
@


1.2
log
@New lua binding to spawn an arbitrary object
@
text
@d24 1
a24 1
int game_server_spawn_blood (float x, float y, long nparticles, long spread);
@


1.1
log
@Initial revision
@
text
@d22 1
@
