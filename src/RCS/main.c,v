head	1.9;
access;
symbols;
locks; strict;
comment	@ * @;


1.9
date	2002.08.17.03.35.37;	author tjaden;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.10.15.38.27;	author tjaden;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.03.11.08.35;	author tjaden;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.11.04.29.49;	author tjaden;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.05.12.18.28;	author tjaden;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.31.12.21.13;	author tjaden;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.29.00.07.42;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.24.07.19.13;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.12.20.16.35;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Updated to Lua 5.0 alpha.
@
text
@/* main.c
 * 
 * Peter Wang <tjaden@@users.sourceforge.net>
 */


#include <stdio.h>
#include <allegro.h>
#include "libnet.h"
#include "client.h"
#include "clsvface.h"
#include "editor.h"
#include "error.h"
#include "gameinit.h"
#include "gamemenu.h"
#include "getoptc.h"
#include "messages.h"
#include "screen.h"
#include "server.h"
#include "sync.h"
#include "textface.h"
#include "timeval.h"


/* XXX */
#ifdef TARGET_WINDOWS
# define INET_DRIVER	NET_DRIVER_WSOCK_WIN
#else
# define INET_DRIVER	NET_DRIVER_SOCKETS
#endif


static int setup_video (int w, int h, int d)
{
    int depths[] = { 16, 15, 0 }, *i;
    
    set_color_conversion (COLORCONV_NONE);
   
    if (d > 0) {
	set_color_depth (d);
	if (set_gfx_mode (GFX_AUTODETECT, w, h, 0, 0) == 0)
	    return 0;
    }
    else {
        for (i = depths; *i; i++) {
	    set_color_depth (*i);
	    if (set_gfx_mode (GFX_AUTODETECT, w, h, 0, 0) == 0)
		return 0;
	}
    }
    
    return -1;
}


static void setup_allegro (int w, int h, int d, int stretch_method)
{
    if (allegro_init () != 0) {
        puts ("Error initialising Allegro.");
	exit (1);
    }
    install_timer ();
    install_keyboard ();

    if (install_mouse () < 0)
        error ("Error initialising mouse.\n");

    install_sound (DIGI_AUTODETECT, MIDI_NONE, 0);

    set_window_title ("Red Pixel II");

    if (setup_video (w, h, d) < 0)
        errorv ("Error setting video mode.\n%s\n", allegro_error);

    screen_blitter_init (stretch_method, d);
    
    if (set_display_switch_mode (SWITCH_BACKAMNESIA) < 0)
	set_display_switch_mode (SWITCH_BACKGROUND);
}


static void unsetup_allegro (void)
{
    screen_blitter_shutdown ();
}


static void setup_minimal_allegro (void)
{
    if (install_allegro (SYSTEM_NONE, &errno, atexit) != 0) {
        allegro_message ("Error initialising Allegro.\n");
	exit (1);
    }

    set_color_conversion (COLORCONV_NONE);
    set_color_depth (16);
}


static void *server_thread (void *arg)
{
    server_run ();
    return NULL;
}


static void do_run_parallel (const char *name)
{
    messages_init ();

    if ((server_init (NULL, NET_DRIVER_LOCAL) < 0) ||
	(client_init (name, NET_DRIVER_LOCAL, "0") < 0)) {
	error ("Error initialising game server or client.  Perhaps another\n"
	       "game server is already running on the same port?\n");
    } else {
	server_enable_single_hack ();

	sync_init (server_thread);
	client_run (0);
	sync_shutdown ();

	client_shutdown ();
	server_shutdown ();

	allegro_errno = &errno;	/* errno is thread-specific */
    }

    messages_shutdown ();
}


static void do_run_server (void)
{
    if (server_init (server_text_interface, INET_DRIVER) < 0) {
	error ("Error initialising game server.  Perhaps another\n"
	       "game server is already running on the same port?\n");
    } else {
	sync_init (NULL);
	server_run ();
	sync_shutdown ();
	server_shutdown ();
    }
}


int main (int argc, char *argv[])
{
    int w = 320, h = 200, d = -1;
    int stretch_method = STRETCH_METHOD_NONE;
    int run_server = 0;
    int run_parallel = 0;
    int run_editor = 0;
    const char *name = "noname";
    const char *addr = "127.0.0.1";
    int c;
    
    opterr = 0;
    
    while ((c = getopt (argc, argv, ":2spa:n:ew:h:d:")) != -1) {
	switch (c) {
	    case '2':
		/* XXX this is temporary */
		w = 640;
		h = 400;
		d = 16;
		stretch_method = STRETCH_METHOD_PLAIN;
		break;
	    case 's':
		run_server = 1;
		break;
	    case 'p':
		run_parallel = 1;
		break;
	    case 'a':
		addr = optarg;
		break;
	    case 'n':
		name = optarg;
		break;
	    case 'e':
		run_editor = 1;
		break;
	    case 'w':
		w = atoi (optarg);
		break;
	    case 'h':
		h = atoi (optarg);
		break;
	    case 'd':
		d = atoi (optarg);
		if ((d != 15) && (d != 16)) {
		    fprintf (stderr, "Only 15 and 16 bpp are valid.\n");
		    return 1;
		}
		break;
	    case ':':
	    	fprintf (stderr, "Option `%c' missing argument.\n", optopt);
		return 1;
	    case '?':
	    	fprintf (stderr, "Unrecognised option `%c'.\n", optopt);
		return 1;
	    default:
	    	abort ();
	}
    }

    if ((run_server + run_parallel + run_editor) > 1) {
	fprintf (stderr, "Incompatible operation modes.\n");
	return 1;
    }

    if (run_server)
	setup_minimal_allegro ();
    else
	setup_allegro (w, h, d, stretch_method);

    game_init ();

    if (run_server) {
	do_run_server ();
    }
    else if (run_parallel) {
	do_run_parallel (name);
    }
    else if (run_editor) {
	if (editor_init () == 0) {
	    editor_run ();
	    editor_shutdown ();
	}
    }
    else {
	if (gamemenu_init () == 0) {
	    gamemenu_run ();
	    gamemenu_shutdown ();
	}
	else {
	    error ("Cannot load data files.  Did you download them?\n");
	}
    }

    game_shutdown ();

    if (!run_server)
	unsetup_allegro ();

    return 0;
}

END_OF_MAIN()
@


1.8
log
@Added screen stretching (double size) and 2xSaI support.
@
text
@d13 1
d58 4
a61 1
    allegro_init ();
d65 2
a66 4
    if (install_mouse () < 0) {
        allegro_message ("Error initialising mouse.\n");
	exit (1);
    }
d72 2
a73 4
    if (setup_video (w, h, d) < 0) {
        allegro_message ("Error setting video mode.\n%s\n", allegro_error);
	exit (1);
    }
d90 4
a93 1
    install_allegro (SYSTEM_NONE, &errno, atexit);
d113 2
a114 3
	allegro_message (
	    "Error initialising game server or client.  Perhaps another\n"
	    "game server is already running on the same port?\n");
d135 2
a136 2
	allegro_message ("Error initialising game server.  Perhaps another\n"
			 "game server is already running on the same port?\n");
d237 1
a237 2
	    allegro_message ("Cannot load data files.  Did you download them?\n");
	    return 1;
@


1.7
log
@Some work on the menu frontend from a *long* time ago, which I didn't
commit before because it wasn't the design that was intended, but I
only remembered after writing it...
@
text
@d17 1
d55 1
a55 1
static void setup_allegro (int w, int h, int d)
d74 2
d82 6
d147 1
d157 1
a157 1
    while ((c = getopt (argc, argv, ":spa:n:ew:h:d:")) != -1) {
d159 7
d213 1
a213 1
	setup_allegro (w, h, d);
a232 2
	    game_shutdown ();
	    return 0;
d242 3
d248 1
a248 1
END_OF_MAIN();
@


1.6
log
@Initial menu system.
@
text
@a120 27
static void do_run_client_server (const char *name)
{
    messages_init ();
	
    /* XXX should make server support multiple network types
       then use NET_DRIVER_LOCAL for the client */
    if ((server_init (client_server_interface, INET_DRIVER) < 0) ||
	(client_init (name, INET_DRIVER, "127.0.0.1") < 0)) {
	allegro_message (
	    "Error initialising game server or client.  Perhaps another\n"
	    "game server is already running on the same port?\n");
    } else {
	sync_init (server_thread);
	client_run (1);
	sync_server_stop_requested ();
	sync_shutdown ();

	client_shutdown ();
	server_shutdown ();

	allegro_errno = &errno;	/* errno is thread-specific */
    }

    messages_shutdown ();
}


a134 13
static void do_run_client (const char *name, const char *addr)
{
    messages_init ();
    if (client_init (name, INET_DRIVER, addr) == 0) {
	sync_init (NULL);
	client_run (0);
	sync_shutdown ();
	client_shutdown ();
    }
    messages_shutdown ();
}


a138 1
    int run_client_server = 0;
d147 1
a147 1
    while ((c = getopt (argc, argv, ":scpa:n:ew:h:d:")) != -1) {
a151 3
	    case 'c':
		run_client_server = 1;
		break;
d188 1
a188 1
    if ((run_server + run_client_server + run_parallel + run_editor) > 1) {
d200 13
a212 1
    /* XXX testing menu */ if (1) {
a224 19
    gettimeofday_init ();

    if (run_editor) {
	if (editor_init () == 0) {
	    editor_run ();
	    editor_shutdown ();
	}
    }
    else if (run_parallel)
	do_run_parallel (name);
    else if (run_client_server)
	do_run_client_server (name);
    else if (run_server)
	do_run_server ();
    else
	do_run_client (name, addr);

    gettimeofday_shutdown ();
    
@


1.5
log
@Use higher-precision timer under Windows (it was really bad before).
@
text
@d14 1
d244 13
d259 6
a264 2
    if (run_editor)
	editor ();
@


1.4
log
@Changes for client-server mode.
@
text
@d19 1
d243 2
d255 2
@


1.3
log
@install_sound
@
text
@d11 1
d15 1
d93 80
d177 1
d186 1
a186 1
    while ((c = getopt (argc, argv, ":spa:n:ew:h:d:")) != -1) {
d191 3
d230 4
a233 2
    if ((run_server) && (run_parallel))
	run_server = 0;
d242 1
a242 1
    if (run_editor) {
d244 8
a251 46
	goto end;
    }
    
    if (run_parallel) {
	if ((server_init (NULL, NET_DRIVER_LOCAL) < 0) ||
	    (client_init (name, NET_DRIVER_LOCAL, "0") < 0)) {
	    allegro_message (
		"Error initialising game server or client.  Perhaps another\n"
		"game server is already running on the same port?\n");
	} else {
	    server_enable_single_hack ();

	    sync_init (server_thread);
	    client_run ();
	    sync_shutdown ();

	    client_shutdown ();
	    server_shutdown ();

	    allegro_errno = &errno;	/* errno is thread-specific */
	}
	goto end;
    }
    
    if (run_server) {
	if (server_init (server_text_interface, INET_DRIVER) < 0) {
	    allegro_message ("Error initialising game server.  Perhaps another\n"
			     "game server is already running on the same port?\n");
	} else {
	    sync_init (NULL);
	    server_run ();
	    sync_shutdown ();
	    server_shutdown ();
	}
	goto end;
    }

    /* run client */
    if (client_init (name, INET_DRIVER, addr) == 0) {
	sync_init (NULL);
	client_run ();
	sync_shutdown ();
	client_shutdown ();
    }

  end:
@


1.2
log
@Changes following cleanup of server and client sources.
@
text
@d61 2
@


1.1
log
@Initial revision
@
text
@d9 2
a10 1
#include <libnet.h>
a12 2
#include "gameclt.h"
#include "gamesrv.h"
d14 1
d73 1
a73 1
static void setup_minimal_allegro ()
d84 1
a84 1
    game_server_run ();
d158 5
a162 4
	if ((game_server_init (NULL, NET_DRIVER_LOCAL) < 0) ||
	    (game_client_init (name, NET_DRIVER_LOCAL, "0") < 0)) {
	    allegro_message ("Error initialising game server or client.  Perhaps another\n"
			     "game server is already running on the same port?\n");
d164 1
a164 1
	    game_server_enable_single_hack ();
d167 1
a167 1
	    game_client_run ();
d170 2
a171 2
	    game_client_shutdown ();
	    game_server_shutdown ();
d179 1
a179 1
	if (game_server_init (&game_server_text_interface, INET_DRIVER) < 0) {
d184 1
a184 1
	    game_server_run ();
d186 1
a186 1
	    game_server_shutdown ();
d192 1
a192 1
    if (game_client_init (name, INET_DRIVER, addr) == 0) {
d194 1
a194 1
	game_client_run ();
d196 1
a196 1
	game_client_shutdown ();
@
