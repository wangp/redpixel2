head	1.12;
access;
symbols;
locks; strict;
comment	@ * @;


1.12
date	2002.07.15.09.27.55;	author tjaden;	state Exp;
branches;
next	1.11;

1.11
date	2002.07.15.08.47.51;	author tjaden;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.14.04.25.26;	author tjaden;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.14.01.32.51;	author tjaden;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.13.06.21.31;	author tjaden;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.11.05.51.45;	author tjaden;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.11.05.24.22;	author tjaden;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.10.10.34.05;	author tjaden;	state Exp;
branches;
next	1.4;

1.4
date	2002.01.28.13.01.00;	author tjaden;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.27.14.06.28;	author tjaden;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.26.11.55.32;	author tjaden;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.24.07.12.14;	author tjaden;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Made it so only player objects can obstruct other objects from
spawning.
@
text
@#ifndef __included_svgame_h
#define __included_svgame_h


struct svclient;
struct object;


void svgame_process_cs_gameinfo_packet (struct svclient *c, const char *buf, size_t size);
void svgame_process_cs_ping (struct svclient *c);
void svgame_process_cs_boing (struct svclient *c);


/* begin Lua bindings */
struct object *svgame_spawn_object (const char *typename, float x, float y);
struct object *svgame_spawn_projectile (const char *typename, struct object *owner, float speed, float delta_angle);
struct object *svgame_spawn_projectile_raw (const char *typename, int owner, float x, float y, float angle, float speed);
void svgame_spawn_blood (float x, float y, long nparticles, float spread);
void svgame_spawn_sparks (float x, float y, long nparticles, float spread);
void svgame_spawn_respawn_particles (float x, float y, long nparticles, float spread);
void svgame_spawn_blod (float x, float y, long nparticles);
void svgame_spawn_explosion (const char *name, float x, float y);
void svgame_spawn_blast (float x, float y, float radius, int damage, int owner);
void svgame_call_method_on_clients (struct object *obj, const char *method, const char *arg);
int svgame_object_would_collide_with_player_if_unhidden (struct object *obj);
int svgame_tell_health (struct object *obj, int health); /* internal */
int svgame_tell_armour (struct object *obj, int armour); /* internal */
int svgame_tell_ammo (struct object *obj, int ammo); /* internal */
void svgame_set_score (int client_id, const char *score);
void svgame_play_sound_on_clients (struct object *obj, const char *sound);
const char *svgame_get_client_name (int client_id);
void svgame_broadcast_text_message (const char *msg);
void svgame_send_text_message (int client_id, const char *msg);
/* end Lua bindings */


extern struct server_state_procs *svgame_procs;


#endif
@


1.11
log
@Made mines work.
@
text
@d25 1
a25 1
int svgame_object_would_collide_with_objects (struct object *obj);
@


1.10
log
@Added function to send a message to only one client.
@
text
@d17 1
@


1.9
log
@Initial armour support.
@
text
@d32 1
@


1.8
log
@Added svgame_get_client_name and svgame_broadcast_text_message
exports.
@
text
@d26 1
@


1.7
log
@Marked in comments which functions were bound to Lua.
@
text
@d29 2
@


1.6
log
@Added blast accreditation.
@
text
@d14 1
d25 2
a26 2
int svgame_tell_health (struct object *obj, int health);
int svgame_tell_ammo (struct object *obj, int ammo);
d29 1
@


1.5
log
@Lots of intermingled changes for:
- initial game types support
- notifying clients about new and quitting clients
- scoring
- allowing the server to play a sound on clients in a simple way
@
text
@d21 1
a21 1
void svgame_spawn_blast (float x, float y, float radius, int damage);
@


1.4
log
@Added client health and ammo displays.
@
text
@d26 2
@


1.3
log
@Added blasts.
@
text
@d24 2
@


1.2
log
@Added support for explosion graphics.
@
text
@d21 1
@


1.1
log
@Initial revision
@
text
@d20 1
@
