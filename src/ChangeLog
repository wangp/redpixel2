2000-12-23  Peter Wang  <tjaden@psynet.net>

	* Cleaned up some list things.

2000-11-26  Peter Wang  <tjaden@psynet.net>

	* Object editing in map editor works again.

2000-11-25  Peter Wang  <tjaden@psynet.net>

	* objtypes.c: Renamed object_type_t to objtype_t and changed
	tableref to init_func.

	* Stripped out a lot of objects stuff.
	
	* mylua.[ch]: New module to contain a personalised Lua API
	(missing lua_ prefix mostly).

	* Moved loadhelp.c stuff into loaddata.c.

	* Made many linked lists use the list.h interface.

2000-11-23  Peter Wang  <tjaden@psynet.net>

	* Siphoned off enough of the Lua using parts to make the program
	compile and link again (only map editor functional).

	* Converted some of the game engine to Lua 4.0.  Got really bored.
	I was going to throw out most of that code anyway...

	* luahelp.c: New module to include Lua related helper functions.
	(lua_checkargs): Simpler argument checking mechanism.

	* Updated rpxutil.c for Lua 4.0 and Allegro const-correctness.

2000-07-06  Peter Wang  <tjaden@psynet.net>

	* hub.c: Now uses the console to initiate games and connections.

2000-07-05  Peter Wang  <tjaden@psynet.net>

	* hub.c: New module, to be the central program loop.

	* console.c: Started on a simple console system (using Lua).

2000-07-04  Peter Wang  <tjaden@psynet.net>

	* Made client do collision detection when moving objects, since
	they were going through walls, etc. too often.  Not sure if this
	will turn out well, since client has impure data.

	* Got object movement replication going at a decent rate.  The
	server now only sends replication packets every render loop, not
	every logic loop.  The client, however, polls for packets every
	logic loop (they could arrive at any time).
	
	* gameloop.c: Scrapped old file, which was a quick hack to test
	out a few ideas, and restarted.

2000-07-03  Peter Wang  <tjaden@psynet.net>

	* Started playing around with replication, then making things
	ready for real replication.
	* gamenet.c: New module.

	* Moved "magic" stuff into own directory.

	* Derived network client/server framework from George Foot's code,
	and merged into source tree (under `net' subdirectory).

2000-07-02  Peter Wang  <tjaden@psynet.net>

	* Cleaned up code, including making editor and game share init.

	* Thought a bit about networking, wrote up in network.txt.

	* objanim.c: New object render mode: simple, looped animation.
	* bdobject.c (object_set_visual_anim): Set render mode from Lua.

	* Decoupled object class from map.  New module object.c manages
	creation and destruction, leaving map.c to linking and unlinking
	objects from a linked list.

2000-07-01  Peter Wang  <tjaden@psynet.net>

	* gameloop.c: Hackish attempt at player and object movement
	(collision detection with tiles, gravity, walkings, jumping).

	* object.h: Made object (x, y) `fixed' type.

	* bdobject.c: Objects can now associate a set of collision mask to
	themselves (set_collion_masks)

	* map.c (map_generate_tile_mask): Generates a tile mask for a map.

	* magicld.c extended to load specially marked bitmaps as bitmasks,
	and renamed to extdata.c.  Function now `load_extended_datafile'.

	* bitmask.c: New module, which will be used to speed up object to
	tile collision detection.

	* editor/mdstarts.c: New module to edit map start locations.
	* mapfile.c: Load and save chunks for them.

	* `map_object_list_t' renamed to `map_image_t' a la The Gimp.

	* mapfile.c (map_load): Rearranged so that it may load chunks in
	any logical order.
	(map_save): Rearranged so that chunks may be omitted if not
	required.

	* magicrot.c: New module to handle magic sprite rotations (hack of
	rotate.c from Allegro).

	* editor/mdobject.c (event_layer): Got rid of a really ridiculous
	jump-through-hoops line.

2000-06-30  Peter Wang  <tjaden@psynet.net>

	* editor/mdobject.c, render.c: Made objects' (x, y) coordinates
	mean the top-left corner, rather than the centre of the sprite.
	
	* Implemented ``rendering modes'' for objects, and added `layered'
	mode.  Original mode named `bitmap' mode.
	* objlayer.c: New module to help out with this.

	* Wrote tilelayers.scm plugin for Gimp... in Scheme :-)
	
	* gameloop.c (game_loop): Objects get a `process' loop.  Used it
	to test out lightamp animation driven in Lua.

	* map.c (map_object_create): Objects begin with their icon as
	their visual rep.

	* render.c (render_objects): Now renders objects.

	* bdobject.c (__export__set_visual): Objects may set their own
	visual representation from Lua scripts (set_visual function).

	* map.c (map_object_create): An object's init function is called
	when it is created.

	* map.h (object_t): Changed object_t structure (e.g. removed icon).
	* editor/mdobject.c, objtypes.c, mapfiles.c: Accompanying changes.

2000-06-29  Peter Wang  <tjaden@psynet.net>

	* mapfile.c: Simple object loading and saving (doesn't do anything
	in the engine).

	* objtypes.c: New module to keep track of object types.

	* Made editor and game share script executing, object loading, and
	bindings code.  New modules or renamed: bdobject.c, bdstore.c,
	bindings.c, scripts.c.

	* luastack.c: New file (function extracted from Lua sources) to
	provide a stack traceback for Lua scripts fail.

	* magicld.c: Modified so only converts datafile bitmaps if missing
	'MAGK' datafile id.

	* Removed resource.c, replaced with simpler path.c.

	* loaddata.c, loadhelp.c: New module, so that the game and editor
	share tile and light loading code.

	* editor/mdobject.c: Sets mouse cursor to selected object type.

	* editor/cursor.c: New module for helping to set mouse cursors.

	* Prefixed editing mode filenames with `md'.

	* render.c: Tile and light rendering at pixel offsets.

2000-06-28  Peter Wang  <tjaden@psynet.net>

	* Beginnings of game engine.

	* Rearranged directory structure a little (files that could be
	used in engine moved out of editor).

	* editor/mapfile.c: Really basic map loading and saving.

	* editor/menu.c: The first menu (new, load, save, quit items).

	* ug/ugbutton.c: Added `extra' helpers, for ug_menu.

	* ug/ugmenu.c: New widget.

	* editor/magic4x4.c (unget_magic_bitmap_format): New function
	(makes some code in edselect.c much cleaner).

	* editor/editarea.c (event): Added panning.

	* editor/objects.c: Added object pick up.

2000-06-27  Peter Wang  <tjaden@psynet.net>

	* editor/objects.c: New module.  A lot of code was copied from
	lights.c, suggesting it's possible that lights would work well as
	an object type.

	* Started embedding Lua into editor.

	* editor/lights.c (lights_toggle): Toggles between showing and not
	showing lighting effects.
	* editor/editarea.c (event): Function bound to space bar.

	* Removed usage of Stonewheel.

	* editor/lights.c: Added light selecting.

	* Merged lightgen.c into rpxutil.c

	* Embedded Lua into gendata.c (renamed to rpxutil.c).  No more
	silly script parsing.

2000-06-26  Peter Wang  <tjaden@psynet.net>

	* Wrote lightgen.c utility to generate light maps.

	* editor/lights.c (event_layer): Right click to remove light,
	click-drag to move existing light.

	* gui/gui.c (gui_main): Added event GUI_EVENT_KEY_HOLD.

	* editor/magicld.c (load_magic_datafile): New function to load in
	datafiles and automatically convert bitmaps into "magic" format.
	* store/store.c (store_load_ex): New function to cope with custom
	loaders, like the above.

	* editor/lights.c: Hackishly put in some test lighting code.
	Really, really slow, but looks cool!

2000-06-25  Peter Wang  <tjaden@psynet.net>

	* editor/map.c: Added lights related stuff.

	* editor/lights.c: New editing mode.

	* editor/editarea.c (event): Scroll map with arrow keys.

	* editor/map.c (map_resize): Fixed problems with `realloc'd areas
	not being cleared.

2000-06-24  Peter Wang  <tjaden@psynet.net>

	* editor/tiles.c (event_layer): Added tile picking.

2000-06-23  Peter Wang  <tjaden@psynet.net>

	* editor/tiles.c: Made tile inserting operational (barely).

	* editor/map.c: New module (handle map structures).

	* Made most files use Allegro's Unicode string functions.

	* Replaced Wumpus with Store, and made tiles.c use it.

2000-06-20  Peter Wang  <tjaden@psynet.net>

	* editor/editarea.c: New module.

2000-06-19  Peter Wang  <tjaden@psynet.net>

	* editor/tiles.c: Made tile lists see the selectbar state
	individually (i.e. each remembers how far down the list you have
	scrolled, and which tile is selected)

	* editor/selbar.c: Made selection list support multiple lists
	(via left/right arrows on top).

	* editor/modemgr.c: Added editing mode management.

	* ug/uglayout.c: Added routines for dynamic building dialog layouts.

	* editor/panelsel.c renamed to selbar.c (selectbar)

2000-06-18  Peter Wang  <tjaden@psynet.net>

	* Wrote tools/gendata.c utility, to do a "grab from grid"
	operation in batch mode.

	* editor/selector.c: Made selector functional, then separated
	selector.c into panelsel.c and edsel.c (widget type), so maybe can
	reuse the widget later.

	* ug/ugwidget.c: Added widget introspection routines.

	* ug/ugdialog.c (ug_dialog_widget): Allowed dialog to look for its
	widgets by an id.

	* ug/ugwidget.c (ug_widget_create): Gave widgets an id ability.
	
	* ug/ugdialog.c: Added dialog introspection routines (x, y, w, h).

	* gui/guiwmdef.c, gui.h: Removed GUI_EVENT_MOUSE_OVER and added
	GUI_HINT_STEALFOCUS (grabs focus if mouse is over the window).

	* Imported Wumpus from an old Red Pixel II code base and started
	making tiles.c use it.

	* editor/resource.c: Start of resources module.

	* Improved UG's ideas of events and signals, but still not perfect
	(e.g. too much code duplication in ug_event.c)

2000-06-17  Peter Wang  <tjaden@psynet.net>

	* editor/selector.c: Started selector module.

	* Reorganised directory structure.

	* guidirty.c (add_rect): Added overlap checking.

	* guiwmdef.c (window_shade): Added window shading.

	* ugdialog.c (layout_dialog): Rewrote layout routine.  Much nicer
	and easier to use.

	* ugtheme.c: Added UG themes support, with a The Paw theme and a
	Motif theme.

	* ugdialog.c (layout_dialog): Added simple layout engine.

2000-06-16  Peter Wang  <tjaden@psynet.net>

	* Started UG, the primitive widget set for GUI.

2000-06-15  Peter Wang  <tjaden@psynet.net>

	* guidirty.c: Added dirty rectangles.

2000-06-11  Peter Wang  <tjaden@psynet.net>

	* guiwmdef.c: Added GUI_EVENT_MOUSE_OVER.

2000-06-10  Peter Wang  <tjaden@psynet.net>

	* Started GUI system (core + window manager).

	* Started mucking about with Stonewheel.
